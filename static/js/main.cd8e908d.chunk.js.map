{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","Chart","useQuery","Math","floor","Date","now","fetchCoinHistory","isLoading","data","type","series","name","map","price","x","time_close","y","open","high","low","close","Number","options","chart","height","title","text","align","xaxis","yaxis","tooltip","enabled","PriceWrapper","styled","div","PriceTitle","h2","Price","refetchInterval","tickersData","quotes","USD","toFixed","BackBtn","button","Title","h1","props","theme","accentColor","Loader","span","Container","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","loading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","cardBgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","ToggleBtn","App","useState","isDark","setIsDark","onClick","current","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.cd8e908d.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\nconst NICO_URL = `https://ohlcv-api.nomadcoders.workers.dev?coinId=btc-bitcoin`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"nicoapi\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  // const stat = {\n  //   series: [\n  //     {\n  //       data: [\n  //         {\n  //           x: new Date(1538778600000),\n  //           y: [6629.81, 6650.5, 6623.04, 6633.33],\n  //         },\n  //         {\n  //           x: new Date(1538780400000),\n  //           y: [6632.01, 6643.59, 6620, 6630.11],\n  //         },\n  //         {\n  //           x: new Date(1538782200000),\n  //           y: [6630.71, 6648.95, 6623.34, 6635.65],\n  //         },\n  //         {\n  //           x: new Date(1538784000000),\n  //           y: [6635.65, 6651, 6629.67, 6638.24],\n  //         },\n  //         {\n  //           x: new Date(1538785800000),\n  //           y: [6638.24, 6640, 6620, 6624.47],\n  //         },\n  //         {\n  //           x: new Date(1538787600000),\n  //           y: [6624.53, 6636.03, 6621.68, 6624.31],\n  //         },\n  //         {\n  //           x: new Date(1538789400000),\n  //           y: [6624.61, 6632.2, 6617, 6626.02],\n  //         },\n  //         {\n  //           x: new Date(1538791200000),\n  //           y: [6627, 6627.62, 6584.22, 6603.02],\n  //         },\n  //         {\n  //           x: new Date(1538793000000),\n  //           y: [6605, 6608.03, 6598.95, 6604.01],\n  //         },\n  //         {\n  //           x: new Date(1538794800000),\n  //           y: [6604.5, 6614.4, 6602.26, 6608.02],\n  //         },\n  //         {\n  //           x: new Date(1538796600000),\n  //           y: [6608.02, 6610.68, 6601.99, 6608.91],\n  //         },\n  //         {\n  //           x: new Date(1538798400000),\n  //           y: [6608.91, 6618.99, 6608.01, 6612],\n  //         },\n  //         {\n  //           x: new Date(1538800200000),\n  //           y: [6612, 6615.13, 6605.09, 6612],\n  //         },\n  //         {\n  //           x: new Date(1538802000000),\n  //           y: [6612, 6624.12, 6608.43, 6622.95],\n  //         },\n  //         {\n  //           x: new Date(1538803800000),\n  //           y: [6623.91, 6623.91, 6615, 6615.67],\n  //         },\n  //         {\n  //           x: new Date(1538805600000),\n  //           y: [6618.69, 6618.74, 6610, 6610.4],\n  //         },\n  //         {\n  //           x: new Date(1538807400000),\n  //           y: [6611, 6622.78, 6610.4, 6614.9],\n  //         },\n  //         {\n  //           x: new Date(1538809200000),\n  //           y: [6614.9, 6626.2, 6613.33, 6623.45],\n  //         },\n  //         {\n  //           x: new Date(1538811000000),\n  //           y: [6623.48, 6627, 6618.38, 6620.35],\n  //         },\n  //         {\n  //           x: new Date(1538812800000),\n  //           y: [6619.43, 6620.35, 6610.05, 6615.53],\n  //         },\n  //         {\n  //           x: new Date(1538814600000),\n  //           y: [6615.53, 6617.93, 6610, 6615.19],\n  //         },\n  //         {\n  //           x: new Date(1538816400000),\n  //           y: [6615.19, 6621.6, 6608.2, 6620],\n  //         },\n  //         {\n  //           x: new Date(1538818200000),\n  //           y: [6619.54, 6625.17, 6614.15, 6620],\n  //         },\n  //         {\n  //           x: new Date(1538820000000),\n  //           y: [6620.33, 6634.15, 6617.24, 6624.61],\n  //         },\n  //         {\n  //           x: new Date(1538821800000),\n  //           y: [6625.95, 6626, 6611.66, 6617.58],\n  //         },\n  //         {\n  //           x: new Date(1538823600000),\n  //           y: [6619, 6625.97, 6595.27, 6598.86],\n  //         },\n  //         {\n  //           x: new Date(1538825400000),\n  //           y: [6598.86, 6598.88, 6570, 6587.16],\n  //         },\n  //         {\n  //           x: new Date(1538827200000),\n  //           y: [6588.86, 6600, 6580, 6593.4],\n  //         },\n  //         {\n  //           x: new Date(1538829000000),\n  //           y: [6593.99, 6598.89, 6585, 6587.81],\n  //         },\n  //         {\n  //           x: new Date(1538830800000),\n  //           y: [6587.81, 6592.73, 6567.14, 6578],\n  //         },\n  //         {\n  //           x: new Date(1538832600000),\n  //           y: [6578.35, 6581.72, 6567.39, 6579],\n  //         },\n  //         {\n  //           x: new Date(1538834400000),\n  //           y: [6579.38, 6580.92, 6566.77, 6575.96],\n  //         },\n  //         {\n  //           x: new Date(1538836200000),\n  //           y: [6575.96, 6589, 6571.77, 6588.92],\n  //         },\n  //         {\n  //           x: new Date(1538838000000),\n  //           y: [6588.92, 6594, 6577.55, 6589.22],\n  //         },\n  //         {\n  //           x: new Date(1538839800000),\n  //           y: [6589.3, 6598.89, 6589.1, 6596.08],\n  //         },\n  //         {\n  //           x: new Date(1538841600000),\n  //           y: [6597.5, 6600, 6588.39, 6596.25],\n  //         },\n  //         {\n  //           x: new Date(1538843400000),\n  //           y: [6598.03, 6600, 6588.73, 6595.97],\n  //         },\n  //         {\n  //           x: new Date(1538845200000),\n  //           y: [6595.97, 6602.01, 6588.17, 6602],\n  //         },\n  //         {\n  //           x: new Date(1538847000000),\n  //           y: [6602, 6607, 6596.51, 6599.95],\n  //         },\n  //         {\n  //           x: new Date(1538848800000),\n  //           y: [6600.63, 6601.21, 6590.39, 6591.02],\n  //         },\n  //         {\n  //           x: new Date(1538850600000),\n  //           y: [6591.02, 6603.08, 6591, 6591],\n  //         },\n  //         {\n  //           x: new Date(1538852400000),\n  //           y: [6591, 6601.32, 6585, 6592],\n  //         },\n  //         {\n  //           x: new Date(1538854200000),\n  //           y: [6593.13, 6596.01, 6590, 6593.34],\n  //         },\n  //         {\n  //           x: new Date(1538856000000),\n  //           y: [6593.34, 6604.76, 6582.63, 6593.86],\n  //         },\n  //         {\n  //           x: new Date(1538857800000),\n  //           y: [6593.86, 6604.28, 6586.57, 6600.01],\n  //         },\n  //         {\n  //           x: new Date(1538859600000),\n  //           y: [6601.81, 6603.21, 6592.78, 6596.25],\n  //         },\n  //         {\n  //           x: new Date(1538861400000),\n  //           y: [6596.25, 6604.2, 6590, 6602.99],\n  //         },\n  //         {\n  //           x: new Date(1538863200000),\n  //           y: [6602.99, 6606, 6584.99, 6587.81],\n  //         },\n  //         {\n  //           x: new Date(1538865000000),\n  //           y: [6587.81, 6595, 6583.27, 6591.96],\n  //         },\n  //         {\n  //           x: new Date(1538866800000),\n  //           y: [6591.97, 6596.07, 6585, 6588.39],\n  //         },\n  //         {\n  //           x: new Date(1538868600000),\n  //           y: [6587.6, 6598.21, 6587.6, 6594.27],\n  //         },\n  //         {\n  //           x: new Date(1538870400000),\n  //           y: [6596.44, 6601, 6590, 6596.55],\n  //         },\n  //         {\n  //           x: new Date(1538872200000),\n  //           y: [6598.91, 6605, 6596.61, 6600.02],\n  //         },\n  //         {\n  //           x: new Date(1538874000000),\n  //           y: [6600.55, 6605, 6589.14, 6593.01],\n  //         },\n  //         {\n  //           x: new Date(1538875800000),\n  //           y: [6593.15, 6605, 6592, 6603.06],\n  //         },\n  //         {\n  //           x: new Date(1538877600000),\n  //           y: [6603.07, 6604.5, 6599.09, 6603.89],\n  //         },\n  //         {\n  //           x: new Date(1538879400000),\n  //           y: [6604.44, 6604.44, 6600, 6603.5],\n  //         },\n  //         {\n  //           x: new Date(1538881200000),\n  //           y: [6603.5, 6603.99, 6597.5, 6603.86],\n  //         },\n  //         {\n  //           x: new Date(1538883000000),\n  //           y: [6603.85, 6605, 6600, 6604.07],\n  //         },\n  //         {\n  //           x: new Date(1538884800000),\n  //           y: [6604.98, 6606, 6604.07, 6606],\n  //         },\n  //       ],\n  //     },\n  //   ],\n  //   options: {\n  //     chart: {\n  //       type: \"candlestick\",\n  //       height: 350,\n  //     },\n  //     title: {\n  //       text: \"CandleStick Chart\",\n  //       align: \"left\",\n  //     },\n  //     xaxis: {\n  //       type: \"datetime\",\n  //     },\n  //     yaxis: {\n  //       tooltip: {\n  //         enabled: true,\n  //       },\n  //     },\n  //   },\n  // };\n  // console.log(\n  //   data?.map((price) => {\n  //     return {\n  //       x: new Date(price.close),\n  //       y: [price.open, price.high, price.low, price.close].map(Number),\n  //     };\n  //   })[0]\n  // );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type='candlestick'\n          series={[\n            {\n              name: \"Prices\",\n              data: data?.map((price) => {\n                return {\n                  x: new Date(price.time_close),\n                  y: [price.open, price.high, price.low, price.close].map(\n                    Number\n                  ),\n                };\n              }) as any,\n            },\n          ]}\n          options={{\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n            },\n            title: {\n              text: \"CandleStick Chart\",\n              align: \"left\",\n            },\n            xaxis: {\n              type: \"datetime\",\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true,\n              },\n            },\n          }}\n        />\n        // <ApexChart series={stat.series} type='candlestick' height={350} />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport styled from \"styled-components\";\n\ninterface PriceProps {\n  coinId: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nconst PriceWrapper = styled.div`\n  background-color: white;\n  border: 1px solid #397cdc;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  span {\n    font-size: 20px;\n    font-weight: 700;\n    margin-left: 30px;\n    align-self: center;\n  }\n`;\n\nconst PriceTitle = styled.h2`\n  font-size: 30px;\n`;\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  return (\n    <PriceWrapper>\n      <PriceTitle>PRICE</PriceTitle>\n      <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n    </PriceWrapper>\n  );\n}\n\nexport default Price;\n","import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst BackBtn = styled.button`\n  padding: 10px;\n  margin: 10px;\n  border-radius: 17px;\n  border: 1px solid black;\n  cursor: pointer;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n        <Link to='/'>\n          <BackBtn>뒤로가기</BackBtn>\n        </Link>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 4).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}>\n                <Img\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path={`/:coinId`}>\n          <Coin />\n        </Route>\n        <Route path={`/`}>\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst ToggleBtn = styled.button`\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) => props.theme.bgColor};\n  padding: 10px;\n  margin: 10px;\n  border-radius: 17px;\n  border: 1px solid black;\n  cursor: pointer;\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleDark = () => setIsDark((current) => !current);\n\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <ToggleBtn onClick={toggleDark}>Toggle</ToggleBtn>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={false} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}